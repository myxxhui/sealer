apiVersion: pingcap.com/v1alpha1
kind: TidbCluster
metadata:
  namespace: tidb-system
  name: basic-tidb-cluster
spec:
  configUpdateStrategy: RollingUpdate
  helper:
    image: busybox:1.33.0
  hostNetwork: false
  imagePullPolicy: IfNotPresent
  pvReclaimPolicy: Retain
  schedulerName: tidb-scheduler
  timezone: UTC
  tlsCluster:
    enabled: false
  version: v5.2.0
  pd:
    affinity: { }
    baseImage: pingcap/pd
    config:
      log:
        level: info
    podSecurityContext: { }
    replicas: 3
    requests:
      cpu: "1"
      memory: 400Mi
      storage: 20Gi
    storageClassName: local-hostpath
    tolerations:
      - effect: NoSchedule
        key: dedicated
        operator: Equal
        value: basic-tidb-cluster-pd
  tidb:
    affinity: { }
    annotations:
      tidb.pingcap.com/sysctl-init: "true"
    baseImage: pingcap/tidb
    config:
      log:
        level: info
      performance:
        max-procs: 0
        tcp-keep-alive: true
    enableTLSClient: false
    maxFailoverCount: 3
    podSecurityContext:
      sysctls:
        - name: net.ipv4.tcp_keepalive_time
          value: "300"
        - name: net.ipv4.tcp_keepalive_intvl
          value: "75"
        - name: net.core.somaxconn
          value: "32768"
    replicas: 2
    requests:
      cpu: "1"
      memory: 400Mi
    separateSlowLog: true
    service:
      type: ClusterIP
    slowLogTailer:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 20m
        memory: 5Mi
    tlsClient:
      enabled: false
    tolerations:
      - effect: NoSchedule
        key: dedicated
        operator: Equal
        value: basic-tidb-cluster-tidb
  tikv:
    affinity: { }
    annotations:
      tidb.pingcap.com/sysctl-init: "true"
    baseImage: pingcap/tikv
    config:
      log-level: info
    hostNetwork: false
    maxFailoverCount: 3
    podSecurityContext:
      sysctls:
        - name: net.core.somaxconn
          value: "32768"
    privileged: false
    replicas: 3
    requests:
      cpu: "1"
      memory: 2Gi
      storage: 50Gi
    storageClassName: local-hostpath
    tolerations:
      - effect: NoSchedule
        key: dedicated
        operator: Equal
        value: basic-tidb-cluster-tikv

---
apiVersion: pingcap.com/v1alpha1
kind: TidbMonitor
metadata:
  namespace: tidb-system
  name: basic-tidb-cluster
spec:
  alertmanagerURL: ""
  annotations: { }
  clusters:
    - name: basic-tidb-cluster
  storage: 50Gi
  storageClassName: local-hostpath
  tolerations: [ ]
  kubePrometheusURL: ""
  nodeSelector: { }
  persistent: true
  imagePullPolicy: IfNotPresent
  grafana:
    baseImage: grafana/grafana
    envs:
      # Configure Grafana using environment variables except GF_PATHS_DATA, GF_SECURITY_ADMIN_USER and GF_SECURITY_ADMIN_PASSWORD
      # Ref https://grafana.com/docs/installation/configuration/#using-environment-variables
      GF_AUTH_ANONYMOUS_ENABLED: "false"
    imagePullPolicy: IfNotPresent
    logLevel: info
    password: admin
    resources: { }
    service:
      portName: http-grafana
      type: NodePort
    username: admin
    version: 7.5.7
  initializer:
    baseImage: pingcap/tidb-monitor-initializer
    imagePullPolicy: IfNotPresent
    resources: { }
    #  limits:
    #    cpu: 50m
    #    memory: 64Mi
    #  requests:
    #    cpu: 50m
    #    memory: 64Mi
    version: v5.2.0
  prometheus:
    baseImage: prom/prometheus
    imagePullPolicy: IfNotPresent
    logLevel: info
    reserveDays: 12
    resources: { }
    #  limits:
    #    cpu: 8000m
    #    memory: 8Gi
    #  requests:
    #    cpu: 4000m
    #    memory: 4Gi
    service:
      portName: http-prometheus
      type: NodePort
    version: v2.18.1
  reloader:
    baseImage: pingcap/tidb-monitor-reloader
    imagePullPolicy: IfNotPresent
    resources: { }
    #  limits:
    #    cpu: 50m
    #    memory: 64Mi
    #  requests:
    #    cpu: 50m
    #    memory: 64Mi
    service:
      portName: tcp-reloader
      type: NodePort
    version: v1.0.1
